(this["webpackJsonptabrasel.github.io"]=this["webpackJsonptabrasel.github.io"]||[]).push([[0],[,,,,function(e,t,i){e.exports={about:"About_about__6ZqrC",p:"About_p__1uNIQ",profileImg:"About_profileImg__1loby",projectList:"About_projectList__2iYpU",projectListItem:"About_projectListItem__1FHxi",projectThumb:"About_projectThumb__3wOU7",blurb:"About_blurb__whPH0",porthole:"About_porthole__1T295"}},,,function(e,t,i){e.exports={projectListItem:"ProjectListItem_projectListItem__Fws7v",projectListItemHeader:"ProjectListItem_projectListItemHeader__3mqMh",projectListItemBody:"ProjectListItem_projectListItemBody__1hD4M"}},,,,function(e,t,i){e.exports={NavBar:"NavBar_NavBar__3sjys",emailz:"NavBar_emailz__2DP8k",socialIconList:"NavBar_socialIconList__3rxw1"}},function(e,t,i){e.exports={projects:"Projects_projects__3AHOa",projectList:"Projects_projectList__2HcQB"}},function(e,t,i){e.exports={tagList:"TagList_tagList__3PFUL",tagListItem:"TagList_tagListItem__Q2zNq"}},function(e,t,i){e.exports={gallery:"Project_gallery__Bx1bA"}},,function(e,t,i){e.exports={App:"App_App__16ZpL",footer:"App_footer__29Fsv",linksList:"App_linksList__2HhpQ"}},,,,,function(e,t,i){},,function(e,t,i){"use strict";i.r(t);var a=i(1),s=i.n(a),r=i(15),o=i.n(r),n=(i(21),i(10),i(16)),c=i.n(n),l=i(6),d=i(2),h=i(5),j=i(4),m=i.n(j),p=(i.p,i.p,i.p+"static/media/sundae_bw.7fc389dd.jpg"),u=i.p+"static/media/music_club_thumb.32614905.png",b=i.p+"static/media/sproingl_thumb.8fe038e8.png",g=i(0);var f=function(){var e=Object(a.useState)(0),t=Object(h.a)(e,2),i=t[0],s=t[1],r=function(){return s(window.pageYOffset)};return Object(a.useEffect)((function(){return window.addEventListener("scroll",r,{passive:!0}),function(){return window.removeEventListener("scroll",r)}}),[]),Object(g.jsxs)("section",{className:m.a.about,children:[Object(g.jsx)("div",{className:"d-flex justify-content-center",children:Object(g.jsx)("div",{className:"".concat(m.a.porthole),children:Object(g.jsx)("img",{src:p,alt:"Profile",style:{position:"relative",top:.15*i-20+"px"}})})}),Object(g.jsx)("section",{className:"d-flex justify-content-center",children:Object(g.jsxs)("div",{className:m.a.blurb,children:[Object(g.jsxs)("p",{className:m.a.p,children:["Hi, I\u2019m Tate! I'm a software engineer at ",Object(g.jsx)("a",{href:"https://www.concretesoftware.com/",target:"_blank",rel:"noopener noreferrer",children:"Concrete Software"})," and previously wrote data analysis tools at ",Object(g.jsx)("a",{href:"https://terrainworks.com/",target:"_blank",rel:"noopener noreferrer",children:"Terrainworks"})," and ",Object(g.jsx)("a",{href:"http://mazamascience.com/",target:"_blank",rel:"noopener noreferrer",children:"Mazama Science"}),"."]}),Object(g.jsx)("p",{className:m.a.p,children:"I dabble in game and web development in my free time. Check out some of my projects!"})]})}),Object(g.jsxs)("section",{className:m.a.projectList,children:[Object(g.jsxs)("div",{className:m.a.projectListItem,children:[Object(g.jsx)("img",{className:m.a.projectThumb,src:u,alt:"Profile"}),Object(g.jsxs)("div",{children:[Object(g.jsx)("h1",{children:"Music Club"}),Object(g.jsx)("p",{children:"A web platform for sharing music with friends. It\u2019s like a book club\u2014except instead of reading books you listen to albums!"})]})]}),Object(g.jsxs)("div",{className:m.a.projectListItem,children:[Object(g.jsx)("img",{className:m.a.projectThumb,src:b,alt:"Profile"}),Object(g.jsxs)("div",{children:[Object(g.jsx)("h1",{children:"SproinGL"}),Object(g.jsx)("p",{children:"A spring-physics-based 3D action game. Written in C++ with OpenGL for a graphics programming course."})]})]})]})]})},x=i(11),O=i.n(x);var y=function(){return Object(g.jsxs)("div",{className:"d-flex flex-column align-items-center",children:[Object(g.jsxs)("div",{className:O.a.socialIconList,children:[Object(g.jsx)("a",{href:"https://www.linkedin.com/in/tate-brasel/",target:"_blank",rel:"noopener noreferrer",children:Object(g.jsx)("i",{className:"fab fa-linkedin"})}),Object(g.jsx)("a",{href:"https://github.com/tabrasel",target:"_blank",rel:"noopener noreferrer",children:Object(g.jsx)("i",{className:"fab fa-github"})})]}),Object(g.jsx)("div",{className:"",children:Object(g.jsx)("a",{className:O.a.emailz,href:"mailto:tatebrasel@gmail.com",children:"tatebrasel@gmail.com"})})]})},w=i(12),v=i.n(w),k=i(7),I=i.n(k),_=i(13),S=i.n(_);var A=function(e){var t=e.tags;return Object(g.jsx)("div",{className:S.a.tagList,children:t.map((function(e){return Object(g.jsx)("div",{className:S.a.tagListItem,children:Object(g.jsx)("small",{children:e})},e)}))})};var T=function(e){var t=e.title,i=e.description,a=e.tags,s=e.context,r=e.timeFrame,o=e.linkTo;return Object(g.jsxs)(l.b,{className:I.a.projectListItem,to:o,children:[Object(g.jsxs)("div",{className:I.a.projectListItemHeader,children:[Object(g.jsx)("small",{children:s}),Object(g.jsx)("small",{className:I.a.timeFrame,children:r})]}),Object(g.jsxs)("div",{className:I.a.projectListItemBody,children:[Object(g.jsxs)("div",{children:[Object(g.jsx)("h2",{children:t}),Object(g.jsx)("p",{children:i})]}),Object(g.jsx)(A,{tags:a})]})]})};var L=function(){return Object(g.jsxs)("div",{className:v.a.projects,children:[Object(g.jsxs)("header",{children:[Object(g.jsx)("h1",{children:"Projects"}),Object(g.jsx)("p",{children:"Below is a collection of coding projects I've worked on over the years, ranging from work and school assignments to personal ventures."})]}),Object(g.jsxs)("div",{className:v.a.projectList,children:[Object(g.jsx)(T,{title:"Music Club",description:"A music-sharing platform.",context:"Personal",timeFrame:"Jul 2021 - present",tags:["React","Angular","Node.js","Express","MongoDB","S3","Heroku","HTML","CSS","JavaScript","TypeScript","Bootstrap"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"Landslide Susceptibility",description:"An ArcGIS toolbox for predicting landslide-susceptible areas from topographic variables.",context:"Work (TerrainWorks)",timeFrame:"Oct 2021 - Nov 2021",tags:["R","terra","mlr3","Random forest"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"Forested Wetlands",description:"An ArcGIS toolbox for predicting wetland regions from topographic variables.",context:"Work (TerrainWorks)",timeFrame:"Jul 2021 - Oct 2021",tags:["R","terra","Random forest"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"Dithereedoo",description:"A tool for applying paletted dither filters to images.",context:"Personal",timeFrame:"Sep 2021",tags:["HTML","CSS","JavaScript","P5.js","Bootstrap"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"MazamaSatelliteUtils",description:"An R package for analyzing air quality data from satellite imagery.",context:"Work (Mazama Science)",timeFrame:"Oct 2021 - Nov 2021",tags:["R","raster","ggplot2","ffmpeg"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"Recipes4U",description:"A recipe website tailored for college students.",context:"School (SaaS)",timeFrame:"Jan 2021 - Mar 2021",tags:["Angular","Node.js","Express","MongoDB","HTML","CSS","TypeScript","Bootstrap"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"Air Monitor Archive",description:"A web interface for interacting with USFS AirFire services.",context:"Work (Mazama Science)",timeFrame:"Jan 2021 - Mar 2021",tags:["HTML","CSS","JavaScript","JQuery","Leaflet","Bootstrap"],linkTo:"/projects/air-monitor-archive"}),Object(g.jsx)(T,{title:"SproinGL",description:"A 3D action game built around spring physics.",context:"School (Computer Graphics)",timeFrame:"Apr 2020 - Jun 2020",tags:["C++","OpenGL","GLFW"],linkTo:"/music-club"}),Object(g.jsx)(T,{title:"VCAS",description:"A video call web app and quality analysis system.",context:"School (Capstone)",timeFrame:"Sep 2019 - Jun 2020",tags:["HTML","CSS","TypeScript","WebRTC","EC2","Kinesis","S3","Lambda","ElasticSearch","Kibana"],linkTo:"/music-club"})]})]})},N=i.p+"static/media/rules.04bd568d.png";var M=function(){return Object(g.jsxs)("div",{children:[Object(g.jsx)("h1",{children:"Music Club"}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Backstory"}),Object(g.jsx)("p",{children:"I can't remember what prompted it now, but back in 2019 two of my friends and I started a group chat for sharing music. We each posted an album for the others to check out and, several days later, one of us had a brainwave:"}),Object(g.jsx)("img",{src:N,alt:"The message that started it all",width:"400px"}),Object(g.jsx)("p",{children:'Doing this in monthly "rounds" seemed like a fun and structured way for us to share and discover albums while also learning about each others\' music tastes. More rules were quickly established:'}),Object(g.jsx)("img",{src:"",alt:"Message on voting for our top 3 songs"}),Object(g.jsx)("img",{src:"",alt:"Message on voting for our own albums too"}),Object(g.jsx)("img",{src:"",alt:"Message on breaking ties"}),Object(g.jsx)("img",{src:"",alt:"Message on album length limits"}),Object(g.jsx)("p",{children:'The "round" structure we eventually agreed on went something like this:'}),Object(g.jsxs)("ol",{children:[Object(g.jsx)("li",{children:"Each participant posts a link to an album on Spotify."}),Object(g.jsx)("li",{children:"Participants listen to all posted albums and note down their three favorite songs for each."}),Object(g.jsx)("li",{children:"Participants post their picked songs."}),Object(g.jsx)("li",{children:"Votes for the picked songs are tallied. For each album, the song with the most votes is added to a shared Spotify playlist."}),Object(g.jsx)("li",{children:"Rinse, repeat."})]}),Object(g.jsx)("p",{children:'We kept this going for several years, and our system continued to evolve. While we three "founders" have participated in every round, we now usually have a guest who joins in for a few rounds at a time too. We\'ve also started doing "themed" rounds where participants are given a prompt to decide what albums to post. Some have been objective like: "participants must post an artist who shares their star sign", or entirely subjective like: "rainy day music". The majority of rounds so far have been a complete free-for-all\u2014anyone can post anything that hasn\'t been shared yet. We do try to limit ourselves to albums of reasonable length and number of songs though, and repeat artists are allowed but generally avoided.'}),Object(g.jsx)("p",{children:"Overall, our music club been a fun, low-committment activity that keeps us connected and involves something we all enjoy."})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Problems"}),Object(g.jsxs)("p",{children:["Unfortunately, I quicky realized that a group chat was not a great place for organizing information. If I wanted to remember my friends' favorite Avril Lavigne songs from her 2002 hit, ",Object(g.jsx)("em",{children:"Let Go"}),", or find out who posted ",Object(g.jsx)("em",{children:"Twin Temple (Bring You Their Signature Sound... Satanic Doo-Wop)"}),", I had to do a lot of scrolling through our multi-year chat history. The text thread format simply wasn't practical for summarizing our dozens of rounds, and on top of that we also migrated to a different messaging app at one point\u2014further fragmenting our already disorganized club history."]}),Object(g.jsxs)("p",{children:["Besides the practical shortcomings of our group chat, something else also began to dawn on me: ",Object(g.jsx)("em",{children:"we're generating a lot of data!"})," Every posted album and liked song gave insight into our members' listening habits. We could learn a lot of interesting things about ourselves and the club by studying how we participated. Things like:"]}),Object(g.jsxs)("ul",{children:[Object(g.jsx)("li",{children:"Which members have the greatest overlap of favorite songs?"}),Object(g.jsxs)("li",{children:["Who do ",Object(g.jsx)("em",{children:"I"})," share the most favorite songs with?"]}),Object(g.jsx)("li",{children:"Who posts the oldest music? The newest?"}),Object(g.jsx)("li",{children:"Who most consistently votes for the top song of each album?"}),Object(g.jsx)("li",{children:"What albums were the most divisive? The most unifying?"}),Object(g.jsx)("li",{children:"What was the shortest round? The longest?"})]}),Object(g.jsxs)("p",{children:["If I could get access to music metadata (like through ",Object(g.jsx)("a",{href:"https://developer.spotify.com/documentation/web-api/",children:"Spotify's API"}),"), maybe I could answer more complex questions too:"]}),Object(g.jsxs)("ul",{children:[Object(g.jsx)("li",{children:"What genre does each member post the most?"}),Object(g.jsx)("li",{children:"Who posts the most danceable music? Instrumental? Sad? Etc."}),Object(g.jsx)("li",{children:"What songs will each participant likely vote for? (Could I feed track metadata and a member's past votes into a machine-learning model and have it try to predict their favorites?)"})]}),Object(g.jsxs)("p",{children:["By the middle of 2021, I realized there were two things I wanted for our club: 1) a way to easily view information about our past rounds and 2) the ability to gain insights from our listening habits. Feeling invigorated by my ",Object(g.jsx)(l.b,{to:"/",children:"SaaS coursework"})," and eager for a new side-project, I decided that building a website was the best way to achieve both goals."]})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Starting at the Back(end)"}),Object(g.jsx)("h3",{children:"Database"}),Object(g.jsx)("p",{children:"So where to begin? At the very least, I needed all the data we were generating to be kept in a single place\u2014an organized structure that could be queried to answer those pressing questions I had. A database! But what information needed to be stored? What information did we even have?"}),Object(g.jsxs)("div",{className:"d-flex justify-content-between",children:[Object(g.jsxs)("div",{children:[Object(g.jsx)("p",{children:"Members"}),Object(g.jsx)("ul",{children:Object(g.jsx)("li",{children:"Name"})})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)("p",{children:"Rounds"}),Object(g.jsxs)("ul",{children:[Object(g.jsx)("li",{children:"Number"}),Object(g.jsx)("li",{children:"Description"}),Object(g.jsx)("li",{children:"Timeframe"}),Object(g.jsx)("li",{children:"Participants"}),Object(g.jsx)("li",{children:"Albums"})]})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)("p",{children:"Albums"}),Object(g.jsxs)("ul",{children:[Object(g.jsx)("li",{children:"Title"}),Object(g.jsx)("li",{children:"Artist"}),Object(g.jsx)("li",{children:"Track count"}),Object(g.jsx)("li",{children:"Poster"}),Object(g.jsx)("li",{children:"Top track"})]})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)("p",{children:"Picked Tracks"}),Object(g.jsxs)("ul",{children:[Object(g.jsx)("li",{children:"Title"}),Object(g.jsx)("li",{children:"Track number"}),Object(g.jsx)("li",{children:"Pickers"})]})]})]}),Object(g.jsx)("p",{children:"Given the small (and relatively private) scope of my project and the likelyhood of my models changing drastically with my vision for the platform, I decided to go the NoSQL route and set up a free MongoDB Atlas Cluster as my primary database. Looking back now, in some ways I regret my decision since my data has become increasingly relational and doesn't utilyze all the benefits of document-based stores, but at the same time I am thankful for the flexibility and its allowance for me to experiment with the information I keep track of."}),Object(g.jsx)("img",{src:"",alt:"MongoDB Atlas Cluster"}),Object(g.jsx)("h3",{children:"REST API & Web Service"}),Object(g.jsx)("p",{children:"After creating my MongoDB Atals Cluster I theoretically could have just used its web interface to populate my database document-by-document, but who wants to do that?! I wanted to input data in a pretty UI with custom forms for each model! I wanted input validation! Dropdown lists! But in order to do any of that, my database had to be managable from outside MongoDB Atlas. I needed an API so that, using REST principles, I could CRUD documents using simple HTTP requests like POST, GET, PUT, and DELETE."}),Object(g.jsx)("p",{children:"These requests had to be sent somewhere though\u2014a server, specifically, which would respond to them by carrying out the appropriate actions in the database and any other necessary operations."}),Object(g.jsx)("p",{children:"by myself since my goal was not to formalize the Music Club by making it an app everyone had to use. As bad as group chats are for organizing information, they're still pretty good for, well...chatting! I didn't want to change the atmosphere of the club for everyone."})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Admin Interface"}),Object(g.jsx)("p",{children:"Now that I had a functional API to CRUD objects in my database, the next step was to actually populate the database with members, rounds, and albums."})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Member Interface"}),Object(g.jsxs)("p",{children:["The admin app provided just about everything I had first hoped to accomplish: an interface that could display our round history as well as some data insights. Unfortunately, I had to admit it wasn't very pretty to look at. The birds-eye view layout was too busy and tailored more for admin tasks than for a clean read-only experience. I didn't want to make this public and give every visitor the ability to manipulate the database. I could have added authentication so just I could  access to  There was also the issue of authentication, since anyone who could run the app could make any changes they wished. Not that I didn't trust my friends to keep their hands off, but . My remedy to this was to create a second interface\u2014one designed specifically for club ",Object(g.jsx)("em",{children:"members"})," who only want to read data and not write it."]}),Object(g.jsx)("p",{children:"Round thumbnails"})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Future Goals"}),Object(g.jsx)("p",{children:"Although I purposefully left out interaction from the member interface (sign-in, creating)....... this would require a substantial database rehaul."})]})]})},P=i.p+"static/media/time_series.76ee5ef5.png",B=i(14),z=i.n(B);var F=function(){return Object(g.jsxs)("div",{className:z.a.Project,children:[Object(g.jsx)("h1",{children:"Air Monitor Archive"}),Object(g.jsx)("div",{className:z.a.gallery,children:Object(g.jsx)("img",{src:P,height:480})}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Background"}),Object(g.jsxs)("p",{children:["Our primary client during my time at Mazama Science was the ",Object(g.jsx)("a",{href:"https://www.airfire.org/",children:"AirFire Research team"}),": one of four such research teams under the U.S. Forest Service's PNW Threat Characterization and Management Program. A large portion of our work for AirFire included developing services to publically communicate historical U.S. air quality data, and for this we built R packages that could generate static images of various plot types. By themselves, these packages were only directly useful to the R developers in the AirFire team, so in order to effectively showcase the insights these plots provided to a larger audience (such as ",Object(g.jsx)("a",{href:"https://www.wildlandfiresmoke.us/air-resource-advisors",children:"Air Resource Advisors"}),") we also needed an accessible platform for requesting and viewing our visualizations."]})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Solution"}),Object(g.jsx)("p",{children:"Our solution to this challenge was to create a web frontend that would allow users to request and view different air quality plots. The requests would be sent to a small backend web service that would generate the plot using our R packages and return an image URL for the interface to display."}),Object(g.jsx)("p",{children:"My role in this production was to prototype a single-page web application including the basic features users would require: form fields to input plot parameters and a pane for viewing the resulting visualization image. Initially, there were 4 kinds of these visualizations to support:"}),Object(g.jsxs)("ul",{children:[Object(g.jsxs)("li",{children:["Daily average: a plot displaying the daily mean ",Object(g.jsx)("a",{href:"https://www.epa.gov/pm-pollution/particulate-matter-pm-basics",children:"PM2.5"})," reading for a given monitor during a specified time range."]}),Object(g.jsx)("li",{children:"Time of Day: a plot displaying the hourly (12am - 11pm) PM2.5 reading for a given monitor during a specified time range."}),Object(g.jsx)("li",{children:"Time-series: a plot displaying the raw PM2.5 readings for a given monitor during a specified time range."}),Object(g.jsx)("li",{children:"Air Quality Index (AQI): A chart describing the various AQI levels used by the EPA to report air quality."})]}),Object(g.jsxs)("p",{children:["Since my task was to create a simple prototype, I was given almost complete freedom in designing the interface as I saw fit. Having a sidebar for input and a large pane for visualizations felt like the most natural page layout for the application, and updating the visualizations upon any form change made requests feel snappy and efficient. The similar requirements of 1) a specific monitor and 2) a specific time range across the first 3 plot types also indicated I could display common form fields for those parameters. For selecting the date range I used the handy ",Object(g.jsx)("a",{href:"https://www.daterangepicker.com/",children:"daterangepicker"})," widget, but monitor selection was a bit more involved. Given that the plotting functions required a monitor ID, I didn't want to just present the user with a gigantic dropdown list of IDs without a hint to the name or location of the monitor they represented. Instead, I chose to embed a small ",Object(g.jsx)("a",{href:"https://leafletjs.com/",children:"Leaflet"})," map populated with icons representing all the monitors available across the United States. Selecting an icon on a map proved much more intuitive than typing or selecting an ID! Finally, the plot type could be chosen using a selection of radio buttons. Other services, like generating/downloading report documents or raw reading CSVs, were added as clickable links when they became available."]})]}),Object(g.jsxs)("section",{children:[Object(g.jsx)("h2",{children:"Reflection"}),Object(g.jsx)("p",{children:"Overall, I was very happy with the final result of my prototype. The user interface was the last link connecting a larger, non-coder audience with our services, and my frontend provided all the basic functionality for our clients to start gaining insights from the air quality data provided by the EPA. However, I think there was a lot of room for improvement technology-wise. Since my boss wanted to quickly and easily share my prototype with members of the AirFire team, I was requested to write the entire app (HTML, CS, JS) in a single .html file. This didn't present too much of an issue since the app was small and I was able to keep my code concise, but it certainly isn't a practice I'd like to continue. Given its small size, I was also requested not to use a frontend framework or library and write all page behavior using vanilla JavaScript and JQuery, which in age of React, Angular, and Vue, felt antiquated and less organized."})]})]})};var W=function(){return Object(g.jsx)(l.a,{children:Object(g.jsxs)("div",{className:c.a.App,children:[Object(g.jsx)(y,{}),Object(g.jsx)("div",{className:"container-sm p-4",children:Object(g.jsxs)(d.c,{children:[Object(g.jsx)(d.a,{exact:!0,path:"/",element:Object(g.jsx)(f,{})}),Object(g.jsx)(d.a,{exact:!0,path:"/projects",element:Object(g.jsx)(L,{})}),Object(g.jsx)(d.a,{exact:!0,path:"/music-club",element:Object(g.jsx)(M,{})}),Object(g.jsx)(d.a,{exact:!0,path:"/projects/air-monitor-archive",element:Object(g.jsx)(F,{})})]})})]})})};o.a.render(Object(g.jsx)(s.a.StrictMode,{children:Object(g.jsx)(W,{})}),document.getElementById("root"))}],[[23,1,2]]]);
//# sourceMappingURL=main.43b2d5e6.chunk.js.map